# This workflow will upload a all packages when a release is created

name: Publish Packages
on:
  release:
    types: [created]
permissions:
  contents: read
jobs:
  publish-simplay-web:
    name: "publish simplay-web"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - name: install & build & publish
        run: |
          cd src/simplay-web 
          npm i
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
  update-version-simplay-web:
    runs-on: ubuntu-latest
    needs: publish-simplay-web
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - name: update versions
        run: |
          cd src/simplay-web 
          npm version patch
      - name: commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Update to next version after release"
          add: "package.json"
  publish-simplay-jupyter-npm:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: publish-simplay-web
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Install dependencies
        run: python -m pip install -U jupyterlab~=3.1
      - name: install & build & publish
        run: |
          cd src/simplay-jupyter
          npm i
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_JUPYTER_ACCESS_TOKEN }}
  publish-simplay-jupyter-pypi:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: publish-simplay-web
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Install dependencies
        run: |
          cd src/simplay-jupyter
          python -m pip install -U jupyterlab~=3.1
      - name: Build the extension
        run: |
          cd src/simplay-jupyter
          set -eux
          python -m pip install .[test]

          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "simplay_jupyter.*OK"
          python -m jupyterlab.browser_check
      - name: Package the extension
        run: |
          cd src/simplay-jupyter
          set -eux

          pip install build
          python -m build
          pip uninstall -y "simplay_jupyter" jupyterlab
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_SIMPLAY_JUPYTER }}
          packages_dir: src/simplay-jupyter/dist/
  publish-simplay:
    name: publish simplay
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: |
          cd src/simplay
          python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_SIMPLAY }}
          packages_dir: src/simplay/dist/
